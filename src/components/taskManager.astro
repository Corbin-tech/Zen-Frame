---
import QuickTaskInput from './QuickTaskInput.astro';
---

<div 
  x-data="taskManager" 
  x-init="
    // Component is now fully reactive with watchers
    console.log('Task manager component mounted');
  " 
  class="w-full max-w-4xl mx-auto rounded-xl shadow-lg p-8"
  style="background-color: var(--card-bg);"
  data-drag-drop-container
>
    <h1 class="text-4xl font-bold text-center mb-8 text-gray-800 dark:text-white">Task Manager</h1>
    
    <!-- Quick Task Input -->
    <div class="mb-8">
        <QuickTaskInput />
    </div>
    
    <!-- Action Buttons -->
    <div class="flex justify-end mb-6">
        <button 
            x-on:click="$store.todos.deleteCompleted()"
            x-show="$store.todos.hasCompletedTasks"
            x-transition:enter="transition ease-out duration-300"
            x-transition:enter-start="opacity-0 transform scale-90"
            x-transition:enter-end="opacity-100 transform scale-100"
            x-transition:leave="transition ease-in duration-200"
            x-transition:leave-start="opacity-100 transform scale-100"
            x-transition:leave-end="opacity-0 transform scale-90"
            class="flex items-center gap-2 px-4 py-2 bg-red-50 hover:bg-red-100 dark:bg-red-900/20 dark:hover:bg-red-900/40 text-red-600 dark:text-red-400 rounded-lg transition-colors duration-200"
        >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
            </svg>
            Delete Completed
        </button>
    </div>
    
    <!-- Clusters and Tasks -->
    <div class="space-y-6 mb-8">
        <!-- Clusters -->
        <template x-for="cluster in $store.todos.items.filter(t => $store.todos.isCluster(t.id))" :key="cluster.id">
            <div 
                class="group rounded-xl shadow-sm border-2 border-gray-100 dark:border-slate-600 hover:border-teal-200 dark:hover:border-teal-800 transition-all duration-300 ease-in-out"
                style="background-color: var(--cluster-bg);"
                x-bind:id="'cluster-' + cluster.id"
                x-bind:data-cluster-id="cluster.id"
                data-cluster
            >
                <!-- Cluster Header -->
                <div class="flex items-center justify-between p-4 border-b border-gray-100 dark:border-slate-600 transition-colors duration-300 ease-in-out"
                     x-bind:class="{'bg-teal-50 dark:bg-teal-900/20': cluster.isPinned}">
                    <div class="flex items-center gap-3 flex-1">
                        <div class="p-1.5 bg-teal-100 dark:bg-teal-900/30 rounded-lg transition-colors duration-300 ease-in-out" x-bind:class="{'ring-2 ring-teal-300 dark:ring-teal-700': cluster.isPinned}">
                            <svg class="w-5 h-5 text-teal-600 dark:text-teal-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v12a2 2 0 01-2 2H5a2 2 0 01-2-2v-12a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                            </svg>
                        </div>
                        <input
                            type="text"
                            x-model="cluster.todo"
                            x-on:input="$store.todos.updateTask(cluster.id, { todo: cluster.todo })"
                            x-on:keydown.enter="$event.target.blur()"
                            x-on:blur="$store.todos.updateTask(cluster.id, { todo: cluster.todo })"
                            class="flex-1 text-lg font-medium bg-transparent border-none focus:ring-0 dark:text-white"
                            placeholder="Cluster Name"
                        />
                        <!-- Pin indicator/button -->
                        <button 
                            x-on:click="$store.todos.togglePinCluster(cluster.id)"
                            class="p-1.5 rounded-lg transition-all"
                            x-bind:class="cluster.isPinned ? 'text-teal-500 hover:text-teal-600 dark:text-teal-400 dark:hover:text-teal-300' : 'text-gray-400 hover:text-teal-500 hover:bg-teal-50 dark:hover:bg-teal-900/20'"
                            x-bind:title="cluster.isPinned ? 'Unpin this cluster' : 'Pin this cluster'"
                        >
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" x-bind:class="{'fill-current': cluster.isPinned}">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z" />
                            </svg>
                        </button>
                    </div>
                    
                    <div class="flex items-center gap-2">
                        <!-- Cluster ordering controls -->
                        <div class="flex flex-col space-y-1">
                            <button 
                                @click="$store.todos.moveClusterUp(cluster.id)"
                                class="p-1 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors"
                                :disabled="$store.todos.isFirstCluster(cluster.id)"
                                :class="$store.todos.isFirstCluster(cluster.id) ? 'opacity-30 cursor-not-allowed' : ''"
                            >
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
                                </svg>
                            </button>
                            <button 
                                @click="$store.todos.moveClusterDown(cluster.id)"
                                class="p-1 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors"
                                :disabled="$store.todos.isLastCluster(cluster.id)"
                                :class="$store.todos.isLastCluster(cluster.id) ? 'opacity-30 cursor-not-allowed' : ''"
                            >
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                                </svg>
                            </button>
                        </div>
                        
                        <!-- Delete button -->
                        <button 
                            x-on:click="$store.todos.deleteTodo(cluster.id)"
                            class="p-1.5 text-gray-400 hover:text-red-500 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg opacity-100 transition-all"
                        >
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                            </svg>
                        </button>
                    </div>
                </div>

                <!-- Cluster Content -->
                <div class="p-4">
                    <div class="p-3 space-y-2 transition-colors duration-300 ease-in-out" x-bind:id="'cluster-container-' + cluster.id" data-droppable>
                        <template x-for="task in $store.todos.items.filter(t => t.parentId === cluster.id)" :key="task.id">
                            <div 
                                class="relative group/task flex items-center border border-gray-100 dark:border-slate-600 rounded-lg shadow-sm hover:shadow-md transition-all duration-300 ease-in-out task-item"
                                style="background-color: var(--task-bg);"
                                x-bind:class="{'bg-green-50 dark:bg-green-900/10 border-green-100 dark:border-green-900/30': task.completed, 'hover:border-teal-300 dark:hover:border-teal-700': !task.completed}"
                                x-bind:id="'task-' + task.id"
                                x-bind:data-task-id="task.id"
                                data-task
                            >
                                <div class="flex-1 py-3 pl-3 pr-16">
                                    <div class="flex items-center gap-3">
                                        <div 
                                            data-drag-handle
                                            class="p-1 cursor-grab text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 flex items-center"
                                            title="Drag to add to a cluster"
                                        >
                                            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8h16M4 16h16" />
                                            </svg>
                                        </div>
                                        <input
                                            type="checkbox"
                                            class="w-5 h-5 rounded border-gray-300 dark:border-slate-500 text-teal-600 dark:text-teal-400 focus:ring-teal-500 dark:focus:ring-teal-400 dark:bg-slate-700"
                                            x-bind:checked="task.completed"
                                            x-on:change="$store.todos.toggleTodo(task.id)"
                                        />
                                        <input
                                            type="text"
                                            x-model="task.todo"
                                            x-bind:readonly="task.completed"
                                            x-on:keydown.enter="$event.target.blur()"
                                            x-on:input="$store.todos.updateTask(task.id, { todo: task.todo })"
                                            x-on:blur="$store.todos.updateTask(task.id, { todo: task.todo })"
                                            class="flex-1 bg-transparent border-none focus:ring-0 focus:outline-none"
                                            x-bind:class="{
                                                'line-through text-gray-400 dark:text-gray-500': task.completed,
                                                'text-gray-700 dark:text-gray-300': !task.completed
                                            }"
                                        />
                                    </div>
                                </div>
                                
                                <!-- Task ordering and actions (to the right) -->
                                <div class="absolute right-2 top-1/2 -translate-y-1/2 flex items-center gap-2">
                                    <!-- Up/down controls -->
                                    <div class="flex flex-col space-y-1">
                                        <button 
                                            @click="$store.todos.moveTaskUp(task.id)"
                                            class="p-0.5 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 transition-colors"
                                            :disabled="$store.todos.isFirstTask(task.id)"
                                            :class="$store.todos.isFirstTask(task.id) ? 'opacity-30 cursor-not-allowed' : ''"
                                        >
                                            <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
                                            </svg>
                                        </button>
                                        <button 
                                            @click="$store.todos.moveTaskDown(task.id)"
                                            class="p-0.5 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 transition-colors"
                                            :disabled="$store.todos.isLastTask(task.id)"
                                            :class="$store.todos.isLastTask(task.id) ? 'opacity-30 cursor-not-allowed' : ''"
                                        >
                                            <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                                            </svg>
                                        </button>
                                    </div>
                                    
                                    <!-- Position number -->
                                    <div 
                                        class="text-xs font-medium px-1.5 py-0.5 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded"
                                        x-text="$store.todos.getTaskPosition(task.id)"
                                    ></div>
                                    
                                    <!-- Delete button -->
                                    <button 
                                        x-on:click="$store.todos.deleteTodo(task.id)"
                                        class="p-1 text-gray-400 hover:text-red-500 dark:text-gray-500 dark:hover:text-red-400 transition-colors"
                                    >
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        </template>
                    </div>
                </div>
            </div>
        </template>
        
        <!-- Main Container - All Non-Clustered Tasks -->
        <div class="flex-1 p-4">
            <h2 class="text-xl font-semibold text-gray-800 dark:text-white mb-4 flex items-center gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-teal-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                </svg>
                Tasks
            </h2>
            
            <div class="space-y-2 transition-colors duration-300 ease-in-out" id="mainContainer" data-droppable>
                <template x-for="task in $store.todos.items.filter(t => !t.parentId && !$store.todos.isCluster(t.id))" :key="task.id">
                    <div 
                        class="relative group/task flex items-center border border-gray-100 dark:border-slate-600 rounded-lg shadow-sm hover:shadow-md transition-all duration-300 ease-in-out task-item"
                        style="background-color: var(--task-bg);"
                        x-bind:class="{'bg-green-50 dark:bg-green-900/10 border-green-100 dark:border-green-900/30': task.completed, 'hover:border-teal-300 dark:hover:border-teal-700': !task.completed}"
                        x-bind:id="'task-' + task.id"
                        x-bind:data-task-id="task.id"
                        data-task
                    >
                        <div class="flex-1 py-3 pl-3 pr-16">
                            <div class="flex items-center gap-3">
                                <div 
                                    data-drag-handle
                                    class="p-1 cursor-grab text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 flex items-center"
                                    title="Drag to add to a cluster"
                                >
                                    <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8h16M4 16h16" />
                                    </svg>
                                </div>
                                <input
                                    type="checkbox"
                                    class="w-5 h-5 rounded border-gray-300 dark:border-slate-500 text-teal-600 dark:text-teal-400 focus:ring-teal-500 dark:focus:ring-teal-400 dark:bg-slate-700"
                                    x-bind:checked="task.completed"
                                    x-on:change="$store.todos.toggleTodo(task.id)"
                                />
                                <input
                                    type="text"
                                    x-model="task.todo"
                                    x-bind:readonly="task.completed"
                                    x-on:keydown.enter="$event.target.blur()"
                                    x-on:input="$store.todos.updateTask(task.id, { todo: task.todo })"
                                    x-on:blur="$store.todos.updateTask(task.id, { todo: task.todo })"
                                    class="flex-1 bg-transparent border-none focus:ring-0 focus:outline-none"
                                    x-bind:class="{
                                        'line-through text-gray-400 dark:text-gray-500': task.completed,
                                        'text-gray-700 dark:text-gray-300': !task.completed
                                    }"
                                />
                            </div>
                        </div>
                        
                        <!-- Task ordering and actions (to the right) -->
                        <div class="absolute right-2 top-1/2 -translate-y-1/2 flex items-center gap-2">
                            <!-- Up/down controls -->
                            <div class="flex flex-col space-y-1">
                                <button 
                                    @click="$store.todos.moveTaskUp(task.id)"
                                    class="p-0.5 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 transition-colors"
                                    :disabled="$store.todos.isFirstTask(task.id)"
                                    :class="$store.todos.isFirstTask(task.id) ? 'opacity-30 cursor-not-allowed' : ''"
                                >
                                    <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
                                    </svg>
                                </button>
                                <button 
                                    @click="$store.todos.moveTaskDown(task.id)"
                                    class="p-0.5 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 transition-colors"
                                    :disabled="$store.todos.isLastTask(task.id)"
                                    :class="$store.todos.isLastTask(task.id) ? 'opacity-30 cursor-not-allowed' : ''"
                                >
                                    <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                                    </svg>
                                </button>
                            </div>
                            
                            <!-- Position number -->
                            <div 
                                class="text-xs font-medium px-1.5 py-0.5 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded"
                                x-text="$store.todos.getTaskPosition(task.id)"
                            ></div>
                            
                            <!-- Delete button -->
                            <button 
                                x-on:click="$store.todos.deleteTodo(task.id)"
                                class="p-1 text-gray-400 hover:text-red-500 dark:text-gray-500 dark:hover:text-red-400 transition-colors"
                            >
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                </svg>
                            </button>
                        </div>
                    </div>
                </template>
            </div>
        </div>
        
<style>
    /* Container styling */
    #mainContainer {
        position: relative;
        padding-top: 20px;
        padding-bottom: 16px;
    }
    
    /* Task items */
    .task-item {
        position: relative;
        transition: box-shadow 0.3s ease;
        margin-bottom: 16px;
                }
    
    .task-item:last-child {
        margin-bottom: 0;
        }

    /* Cluster drop target */
    .drop-target-cluster {
        border: 2px dashed #0d9488 !important;
        background-color: rgba(13, 148, 136, 0.05) !important;
        transition: all 0.3s ease;
    }
    
    /* When dragging - apply to the item being dragged */
    [data-drag-active="true"] {
        opacity: 0.8;
        transform: scale(1.03);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        z-index: 50;
        cursor: grabbing;
        border: 2px solid #0d9488 !important;
    }
    
    /* Drag handle styling */
    [data-drag-handle] {
        cursor: grab;
    }
    
    [data-drag-handle]:active {
        cursor: grabbing;
    }
    
    /* Empty container indication */
    [data-container]:empty::before {
        content: "Drop tasks here";
        display: block;
        padding: 1rem;
        text-align: center;
        color: #9ca3af;
        font-style: italic;
        border: 2px dashed #e5e7eb;
        border-radius: 0.5rem;
        margin: 1rem 0;
    }
    
    .dark [data-container]:empty::before {
        color: #6b7280;
        border-color: #4b5563;
    }
    
    /* Task item hover effect */
    .task-item:hover {
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
    
    .dark .task-item:hover {
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.2), 0 2px 4px -1px rgba(0, 0, 0, 0.1);
    }
    
    /* Ensure SVG elements transition smoothly */
    svg {
        transition: color 300ms ease-in-out, fill 300ms ease-in-out, stroke 300ms ease-in-out;
    }
    
    /* Style for the placeholder when dragging */
    .sortable-ghost {
        opacity: 0.5;
        background-color: rgba(203, 213, 225, 0.5) !important;
    }
    
    .dark .sortable-ghost {
        background-color: rgba(71, 85, 105, 0.5) !important;
    }
    
    /* Style for grab handle */
    .handle {
        cursor: grab;
    }
    
    /* Custom scrollbar */
    .thin-scrollbar::-webkit-scrollbar {
        width: 6px;
    }
    
    .thin-scrollbar::-webkit-scrollbar-track {
        background: transparent;
    }
    
    .thin-scrollbar::-webkit-scrollbar-thumb {
        background-color: rgba(156, 163, 175, 0.5);
        border-radius: 20px;
    }
    
    .thin-scrollbar::-webkit-scrollbar-thumb:hover {
        background-color: rgba(156, 163, 175, 0.8);
    }
    
    .dark .thin-scrollbar::-webkit-scrollbar-thumb {
        background-color: rgba(71, 85, 105, 0.5);
    }
    
    .dark .thin-scrollbar::-webkit-scrollbar-thumb:hover {
        background-color: rgba(71, 85, 105, 0.8);
    }
</style>
</div>
