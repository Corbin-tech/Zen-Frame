---
import PomoTimer from './pomoTimer.astro';
import ZenToDoList from './zenToDoList.astro';
import TaskManager from './taskManager.astro';
import Schedule from './schedule.astro';
---

<div 
    x-data="{ 
        activeTab: 'taskmanager',
        init() {
            if (typeof window !== 'undefined') {
                this.activeTab = localStorage.getItem('activeTab') || 'taskmanager';
                this.$nextTick(() => {
                    this.$el.removeAttribute('x-cloak');
                });
                this.$watch('activeTab', (value) => {
                    localStorage.setItem('activeTab', value);
                });
            }
        },
        handleTabChange(e) {
            this.activeTab = e.detail.tab;
        }
    }" 
    x-cloak
    @change-tab.window="activeTab = $event.detail.tab"
    class="w-full"
>
    <!-- Tab Navigation -->
    <div class="border-b transition-colors duration-300 ease-in-out" style="border-color: var(--border-color);">
        <ul class="flex flex-wrap -mb-px text-sm font-medium text-center text-gray-500 dark:text-gray-400">
            <li class="mr-2 min-w-[120px]">
                <button 
                    @click="activeTab = 'taskmanager'; if (typeof window !== 'undefined') localStorage.setItem('activeTab', 'taskmanager')"
                    :class="activeTab === 'taskmanager' ? 'border-teal-600 text-teal-600 dark:text-teal-500 dark:border-teal-500' : 'border-transparent hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300'"
                    class="w-full pb-4 px-2 text-sm font-medium border-b-2 focus:outline-none transition-colors duration-200 select-none"
                >
                    <div class="flex items-center justify-center gap-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                        </svg>
                        <span>Task Manager</span>
                    </div>
                </button>
            </li>
            <li class="mr-2 min-w-[120px]">
                <button 
                    @click="activeTab = 'schedule'; if (typeof window !== 'undefined') localStorage.setItem('activeTab', 'schedule')"
                    :class="activeTab === 'schedule' ? 'border-teal-600 text-teal-600 dark:text-teal-500 dark:border-teal-500' : 'border-transparent hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300'"
                    class="w-full pb-4 px-2 text-sm font-medium border-b-2 focus:outline-none transition-colors duration-200 select-none"
                >
                    <div class="flex items-center justify-center gap-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                        <span>Schedule</span>
                    </div>
                </button>
            </li>
            <li class="mr-2 min-w-[120px]">
                <button 
                    @click="activeTab = 'pomodoro'; if (typeof window !== 'undefined') localStorage.setItem('activeTab', 'pomodoro')"
                    :class="activeTab === 'pomodoro' ? 'border-teal-600 text-teal-600 dark:text-teal-500 dark:border-teal-500' : 'border-transparent hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300'"
                    class="w-full pb-4 px-2 text-sm font-medium border-b-2 focus:outline-none transition-colors duration-200 select-none"
                >
                    <div class="flex items-center justify-center gap-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <span>Pomodoro</span>
                    </div>
                </button>
            </li>
            <li class="mr-2 min-w-[120px]">
                <button 
                    @click="activeTab = 'zenmode'; if (typeof window !== 'undefined') localStorage.setItem('activeTab', 'zenmode')"
                    :class="activeTab === 'zenmode' ? 'border-teal-600 text-teal-600 dark:text-teal-500 dark:border-teal-500' : 'border-transparent hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300'"
                    class="w-full pb-4 px-2 text-sm font-medium border-b-2 focus:outline-none transition-colors duration-200 select-none"
                >
                    <div class="flex items-center justify-center gap-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z" />
                        </svg>
                        <span>Zen Mode</span>
                    </div>
                </button>
            </li>
            
            <!-- Timer Status (shows only when timer is running) -->
            <li class="ml-auto flex items-center" 
                x-show="$store && $store.pomoState && ($store.pomoState.isRunning || $store.pomoState.timeLeft < $store.pomoState.totalTime)"
                x-cloak role="timer" aria-live="polite"
                :aria-label="$store.pomoState.isRunning ? 'A running Pomodoro timer displaying minutes and seconds remaining' : 'A paused Pomodoro timer displaying minutes and seconds remaining'">
                <div class="inline-flex items-center space-x-2 p-2 bg-white dark:bg-slate-800 rounded-lg border border-gray-200 dark:border-gray-700 shadow-sm transform -translate-y-3 hover:shadow transition-all animate-in fade-in-50 duration-300"
                     :class="$store.pomoState.isRunning ? '' : 'opacity-85'">
                    <div class="text-sm font-medium flex items-center" 
                         :class="$store.pomoState.isRunning ? 'text-gray-700 dark:text-gray-200' : 'text-gray-500 dark:text-gray-400'">
                        <!-- Pause indicator when timer is paused -->
                        <span x-show="!$store.pomoState.isRunning" class="mr-1">⏸️</span>
                        <span x-text="Math.floor($store.pomoState.timeLeft / 60).toString().padStart(2, '0')"></span>:<span x-text="($store.pomoState.timeLeft % 60).toString().padStart(2, '0')"></span>
                    </div>
                    
                    <!-- Mini Progress Circle -->
                    <div class="relative w-5 h-5">
                        <svg class="w-full h-full rotate-90 -scale-y-100" viewBox="0 0 100 100">
                            <circle
                                cx="50" cy="50" r="45"
                                fill="transparent"
                                stroke="currentColor"
                                stroke-width="10"
                                class="text-gray-200 dark:text-gray-700"
                            />
                            <circle
                                cx="50" cy="50" r="45"
                                fill="transparent"
                                stroke="currentColor"
                                stroke-width="10"
                                stroke-linecap="round"
                                :stroke-dasharray="283"
                                :stroke-dashoffset="283 - (283 * $store.pomoState.percentComplete) / 100"
                                :class="$store.pomoState.isRunning ? 'text-teal-500 dark:text-teal-400' : 'text-gray-400 dark:text-gray-500'"
                                class="transition-all duration-1000 ease-in-out"
                            />
                        </svg>
                    </div>
                </div>
            </li>
        </ul>
    </div>

    <!-- Tab Content -->
    <div class="mt-4">
        <div x-show="activeTab === 'taskmanager'" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100">
            <TaskManager />
        </div>
        <div x-show="activeTab === 'schedule'" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100">
            <Schedule />
        </div>
        <div x-show="activeTab === 'pomodoro'" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100">
            <PomoTimer />
        </div>
        <div x-show="activeTab === 'zenmode'" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100">
            <ZenToDoList />
        </div>
    </div>
</div>
